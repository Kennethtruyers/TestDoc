{
  "openapi": "3.0.1",
  "info": {
    "title": "Security API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44340"
    }
  ],
  "paths": {
    "/api/apiKeys": {
      "get": {
        "tags": [
          "ApiKey"
        ],
        "summary": "All API Keys",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of API Keys",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKey"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKey"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKey"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:list:apikey"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Create API Key",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The API Key information to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the API Key",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:create:apikey"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Update API Key",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The API Key to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update succeeded",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKey"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Could not find API Key",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:apikey"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Delete API Key",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The hash of the API Key to delete",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Key is deleted"
          },
          "400": {
            "description": "API Key is empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API Key not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:delete:apikey"
            ]
          }
        ]
      }
    },
    "/api/apiKeys/block": {
      "post": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Blocks API Key",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The hash of the API to block",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Key is blocked"
          },
          "400": {
            "description": "API Key is empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API Key not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:apikey"
            ]
          }
        ]
      }
    },
    "/api/apiKeys/unblock": {
      "post": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Unblock API Key",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The hash of the API Key to unblock",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiIdentifier"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API Key is unblocked"
          },
          "400": {
            "description": "API Key is empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "API Key not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:apikey"
            ]
          }
        ]
      }
    },
    "/api/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "All Applications",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Applications",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:list:application"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Create application",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The application to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created application",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:create:application"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Update application",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The application to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Application"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:application"
            ]
          }
        ]
      }
    },
    "/api/applications/{id}": {
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Delete application",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the application to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:delete:application"
            ]
          }
        ]
      }
    },
    "/api/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "All groups",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of groups",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:list:group"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create group",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The group to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created group",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:create:group"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update group",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The group to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:group"
            ]
          }
        ]
      }
    },
    "/api/groups/{id}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:delete:group"
            ]
          }
        ]
      }
    },
    "/api/organisations": {
      "post": {
        "tags": [
          "Organisation"
        ],
        "summary": "Create new organisation",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The organisation to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the organisation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:create:organisation"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Update an organisation",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The organisation to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update is correct"
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:organisation"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "All Organisations",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Organisations",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:list:organisation"
            ]
          }
        ]
      }
    },
    "/api/organisations/{id}": {
      "delete": {
        "tags": [
          "Organisation"
        ],
        "summary": "Removes an organisation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The organisation to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "organisation is deleted"
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:delete:organisation"
            ]
          }
        ]
      }
    },
    "/api/permissions/token": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              
            ]
          }
        ]
      }
    },
    "/api/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "All Permissions",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Permissions",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:list:permission"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Create permission",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The permission to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created permission",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:create:permission"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "summary": "Update permission",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The permission to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Permission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:permission"
            ]
          }
        ]
      }
    },
    "/api/permissions/{id}": {
      "delete": {
        "tags": [
          "Permissions"
        ],
        "summary": "Delete permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the permission to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:delete:permission"
            ]
          }
        ]
      }
    },
    "/api/resourceTypes": {
      "get": {
        "tags": [
          "ResourceType"
        ],
        "summary": "All resource types",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of resource types",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:list:resourcetype"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ResourceType"
        ],
        "summary": "Create resource type",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The resource type to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created resource type",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:create:resourcetype"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "ResourceType"
        ],
        "summary": "Update resource type",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The resource type to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceType"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:resourcetype"
            ]
          }
        ]
      }
    },
    "/api/resourceTypes/{id}": {
      "delete": {
        "tags": [
          "ResourceType"
        ],
        "summary": "Delete resourcetype",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the resource type to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource type is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:delete:resourcetype"
            ]
          }
        ]
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "All roles",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:list:role"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create role",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The role to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the created role",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:create:role"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Update role",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The role to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:role"
            ]
          }
        ]
      }
    },
    "/api/roles/{id}": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Delete role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role is deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:delete:role"
            ]
          }
        ]
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The user information to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the user and the password reset link",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedUser"
                }
              }
            }
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:create:user"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The user to update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update is correct"
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:update:user"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "All Users",
        "parameters": [
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Users",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:list:user"
            ]
          }
        ]
      }
    },
    "/api/users/{userId}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Removes a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "API-KEY",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted"
          },
          "400": {
            "description": "If the request has any errors",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "usermanagement:delete:user"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ResourceAssignment": {
        "type": "object",
        "properties": {
          "resourceTypeId": {
            "type": "string",
            "nullable": true
          },
          "resourceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleAssignment": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "resourceAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAssignment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionAssignment": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "string",
            "nullable": true
          },
          "resourceTypeId": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiKey": {
        "required": [
          "organisation"
        ],
        "type": "object",
        "properties": {
          "cacheId": {
            "type": "string",
            "description": "The identifier to be used when performing operations on the API Key",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Display name of the API Key",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "description": "Organisation this belongs to.",
            "nullable": true
          },
          "blocked": {
            "type": "boolean",
            "description": "Currently blocked from logging in",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionAssignment"
            },
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "managedGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatedApiKey": {
        "type": "object",
        "properties": {
          "apiKey": {
            "$ref": "#/components/schemas/ApiKey"
          },
          "key": {
            "type": "string",
            "description": "Value to add in to the API-KEY header",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "ApiIdentifier": {
        "required": [
          "cacheId"
        ],
        "type": "object",
        "properties": {
          "cacheId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "organisationId": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "nullable": true
          },
          "childGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Organisation": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "internalNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Permission": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "resourceTypeId": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Resource": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "resourceTypeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceType": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isBuiltIn": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "applicationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "organisation"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "First name",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name",
            "nullable": true
          },
          "picture": {
            "type": "string",
            "nullable": true
          },
          "isAuth0User": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "description": "Organisation this belongs to.",
            "nullable": true
          },
          "blocked": {
            "type": "boolean",
            "description": "Currently blocked from logging in",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionAssignment"
            },
            "nullable": true
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "managedGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewUserRequest": {
        "required": [
          "redirect",
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "redirect": {
            "type": "string",
            "description": "URL the user should be redirected to after his first login",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatedUser": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "passwordResetLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://appyway.com/",
            "tokenUrl": "http://appyway.com/",
            "scopes": {
              
            }
          }
        }
      },
      "api-key": {
        "type": "apiKey",
        "name": "API-KEY",
        "in": "header"
      }
    }
  },
  "security": [
    {
      
    }
  ]
}